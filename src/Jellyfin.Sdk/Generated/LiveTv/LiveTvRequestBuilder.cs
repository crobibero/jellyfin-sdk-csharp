// <auto-generated/>
using Jellyfin.Sdk.Generated.LiveTv.ChannelMappingOptions;
using Jellyfin.Sdk.Generated.LiveTv.ChannelMappings;
using Jellyfin.Sdk.Generated.LiveTv.Channels;
using Jellyfin.Sdk.Generated.LiveTv.GuideInfo;
using Jellyfin.Sdk.Generated.LiveTv.Info;
using Jellyfin.Sdk.Generated.LiveTv.ListingProviders;
using Jellyfin.Sdk.Generated.LiveTv.LiveRecordings;
using Jellyfin.Sdk.Generated.LiveTv.LiveStreamFiles;
using Jellyfin.Sdk.Generated.LiveTv.Programs;
using Jellyfin.Sdk.Generated.LiveTv.Recordings;
using Jellyfin.Sdk.Generated.LiveTv.SeriesTimers;
using Jellyfin.Sdk.Generated.LiveTv.Timers;
using Jellyfin.Sdk.Generated.LiveTv.TunerHosts;
using Jellyfin.Sdk.Generated.LiveTv.Tuners;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace Jellyfin.Sdk.Generated.LiveTv {
    /// <summary>
    /// Builds and executes requests for operations under \LiveTv
    /// </summary>
    public class LiveTvRequestBuilder : BaseRequestBuilder 
    {
        /// <summary>The ChannelMappingOptions property</summary>
        public ChannelMappingOptionsRequestBuilder ChannelMappingOptions
        {
            get => new ChannelMappingOptionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The ChannelMappings property</summary>
        public ChannelMappingsRequestBuilder ChannelMappings
        {
            get => new ChannelMappingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Channels property</summary>
        public ChannelsRequestBuilder Channels
        {
            get => new ChannelsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The GuideInfo property</summary>
        public GuideInfoRequestBuilder GuideInfo
        {
            get => new GuideInfoRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Info property</summary>
        public InfoRequestBuilder Info
        {
            get => new InfoRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The ListingProviders property</summary>
        public ListingProvidersRequestBuilder ListingProviders
        {
            get => new ListingProvidersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The LiveRecordings property</summary>
        public LiveRecordingsRequestBuilder LiveRecordings
        {
            get => new LiveRecordingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The LiveStreamFiles property</summary>
        public LiveStreamFilesRequestBuilder LiveStreamFiles
        {
            get => new LiveStreamFilesRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Programs property</summary>
        public ProgramsRequestBuilder Programs
        {
            get => new ProgramsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Recordings property</summary>
        public RecordingsRequestBuilder Recordings
        {
            get => new RecordingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The SeriesTimers property</summary>
        public SeriesTimersRequestBuilder SeriesTimers
        {
            get => new SeriesTimersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Timers property</summary>
        public TimersRequestBuilder Timers
        {
            get => new TimersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The TunerHosts property</summary>
        public TunerHostsRequestBuilder TunerHosts
        {
            get => new TunerHostsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The Tuners property</summary>
        public TunersRequestBuilder Tuners
        {
            get => new TunersRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new <see cref="LiveTvRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public LiveTvRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/LiveTv", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="LiveTvRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public LiveTvRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/LiveTv", rawUrl)
        {
        }
    }
}
