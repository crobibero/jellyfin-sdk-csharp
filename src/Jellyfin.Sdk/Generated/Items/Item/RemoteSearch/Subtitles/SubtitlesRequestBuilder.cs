// <auto-generated/>
using Jellyfin.Sdk.Generated.Items.Item.RemoteSearch.Subtitles.Item;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace Jellyfin.Sdk.Generated.Items.Item.RemoteSearch.Subtitles {
    /// <summary>
    /// Builds and executes requests for operations under \Items\{itemId}\RemoteSearch\Subtitles
    /// </summary>
    public class SubtitlesRequestBuilder : BaseRequestBuilder 
    {
        /// <summary>Gets an item from the Jellyfin.Sdk.Generated.Items.item.RemoteSearch.Subtitles.item collection</summary>
        /// <param name="position">The language of the subtitles.</param>
        /// <returns>A <see cref="LanguageItemRequestBuilder"/></returns>
        public LanguageItemRequestBuilder this[string position]
        {
            get
            {
                var urlTplParams = new Dictionary<string, object>(PathParameters);
                urlTplParams.Add("language%2Did", position);
                return new LanguageItemRequestBuilder(urlTplParams, RequestAdapter);
            }
        }
        /// <summary>
        /// Instantiates a new <see cref="SubtitlesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public SubtitlesRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/Items/{itemId}/RemoteSearch/Subtitles", pathParameters)
        {
        }
        /// <summary>
        /// Instantiates a new <see cref="SubtitlesRequestBuilder"/> and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public SubtitlesRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/Items/{itemId}/RemoteSearch/Subtitles", rawUrl)
        {
        }
    }
}
