// <auto-generated/>
using Jellyfin.Sdk.Generated.Videos.ActiveEncodings;
using Jellyfin.Sdk.Generated.Videos.Item;
using Jellyfin.Sdk.Generated.Videos.MergeVersions;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace Jellyfin.Sdk.Generated.Videos {
    /// <summary>
    /// Builds and executes requests for operations under \Videos
    /// </summary>
    public class VideosRequestBuilder : BaseRequestBuilder {
        /// <summary>The ActiveEncodings property</summary>
        public ActiveEncodingsRequestBuilder ActiveEncodings { get =>
            new ActiveEncodingsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The MergeVersions property</summary>
        public MergeVersionsRequestBuilder MergeVersions { get =>
            new MergeVersionsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>Gets an item from the Jellyfin.Sdk.Generated.Videos.item collection</summary>
        /// <param name="position">The item id.</param>
        public VideosItemRequestBuilder this[Guid position] { get {
            var urlTplParams = new Dictionary<string, object>(PathParameters);
            urlTplParams.Add("Videos%2Did", position);
            return new VideosItemRequestBuilder(urlTplParams, RequestAdapter);
        } }
        /// <summary>Gets an item from the Jellyfin.Sdk.Generated.Videos.item collection</summary>
        /// <param name="position">The item id.</param>
        [Obsolete("This indexer is deprecated and will be removed in the next major version. Use the one with the typed parameter instead.")]
        public VideosItemRequestBuilder this[string position] { get {
            var urlTplParams = new Dictionary<string, object>(PathParameters);
            if (!string.IsNullOrWhiteSpace(position)) urlTplParams.Add("Videos%2Did", position);
            return new VideosItemRequestBuilder(urlTplParams, RequestAdapter);
        } }
        /// <summary>
        /// Instantiates a new VideosRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public VideosRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/Videos", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new VideosRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public VideosRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/Videos", rawUrl) {
        }
    }
}
