// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Jellyfin.Sdk.Generated.Models {
    #pragma warning disable CS1591
    public class RecommendationDto : IParsable 
    #pragma warning restore CS1591
    {
        /// <summary>The BaselineItemName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? BaselineItemName { get; set; }
#nullable restore
#else
        public string BaselineItemName { get; set; }
#endif
        /// <summary>The CategoryId property</summary>
        public Guid? CategoryId { get; set; }
        /// <summary>The Items property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<BaseItemDto>? Items { get; set; }
#nullable restore
#else
        public List<BaseItemDto> Items { get; set; }
#endif
        /// <summary>The RecommendationType property</summary>
        public RecommendationDto_RecommendationType? RecommendationType { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="RecommendationDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static RecommendationDto CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new RecommendationDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                {"BaselineItemName", n => { BaselineItemName = n.GetStringValue(); } },
                {"CategoryId", n => { CategoryId = n.GetGuidValue(); } },
                {"Items", n => { Items = n.GetCollectionOfObjectValues<BaseItemDto>(BaseItemDto.CreateFromDiscriminatorValue)?.ToList(); } },
                {"RecommendationType", n => { RecommendationType = n.GetEnumValue<RecommendationDto_RecommendationType>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("BaselineItemName", BaselineItemName);
            writer.WriteGuidValue("CategoryId", CategoryId);
            writer.WriteCollectionOfObjectValues<BaseItemDto>("Items", Items);
            writer.WriteEnumValue<RecommendationDto_RecommendationType>("RecommendationType", RecommendationType);
        }
    }
}
