// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Jellyfin.Sdk.Generated.Models {
    /// <summary>
    /// Class MovePlaylistItemRequestDto.
    /// </summary>
    public class MovePlaylistItemRequestDto : IParsable {
        /// <summary>Gets or sets the new position.</summary>
        public int? NewIndex { get; set; }
        /// <summary>Gets or sets the playlist identifier of the item.</summary>
        public Guid? PlaylistItemId { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="MovePlaylistItemRequestDto"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static MovePlaylistItemRequestDto CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new MovePlaylistItemRequestDto();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"NewIndex", n => { NewIndex = n.GetIntValue(); } },
                {"PlaylistItemId", n => { PlaylistItemId = n.GetGuidValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteIntValue("NewIndex", NewIndex);
            writer.WriteGuidValue("PlaylistItemId", PlaylistItemId);
        }
    }
}
