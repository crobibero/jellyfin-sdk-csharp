// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace Jellyfin.Sdk.Generated.Models {
    public class AuthenticationResult : IParsable {
        /// <summary>The AccessToken property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AccessToken { get; set; }
#nullable restore
#else
        public string AccessToken { get; set; }
#endif
        /// <summary>The ServerId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ServerId { get; set; }
#nullable restore
#else
        public string ServerId { get; set; }
#endif
        /// <summary>Class SessionInfo.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public Jellyfin.Sdk.Generated.Models.SessionInfo? SessionInfo { get; set; }
#nullable restore
#else
        public Jellyfin.Sdk.Generated.Models.SessionInfo SessionInfo { get; set; }
#endif
        /// <summary>Class UserDto.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UserDto? User { get; set; }
#nullable restore
#else
        public UserDto User { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static AuthenticationResult CreateFromDiscriminatorValue(IParseNode parseNode) {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new AuthenticationResult();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers() {
            return new Dictionary<string, Action<IParseNode>> {
                {"AccessToken", n => { AccessToken = n.GetStringValue(); } },
                {"ServerId", n => { ServerId = n.GetStringValue(); } },
                {"SessionInfo", n => { SessionInfo = n.GetObjectValue<Jellyfin.Sdk.Generated.Models.SessionInfo>(Jellyfin.Sdk.Generated.Models.SessionInfo.CreateFromDiscriminatorValue); } },
                {"User", n => { User = n.GetObjectValue<UserDto>(UserDto.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer) {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("AccessToken", AccessToken);
            writer.WriteStringValue("ServerId", ServerId);
            writer.WriteObjectValue<Jellyfin.Sdk.Generated.Models.SessionInfo>("SessionInfo", SessionInfo);
            writer.WriteObjectValue<UserDto>("User", User);
        }
    }
}
